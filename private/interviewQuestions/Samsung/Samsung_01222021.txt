#include <stdio.h>

/*
input digits = [1,2,9]
output: [0,1,3,0]

digits = 9,9
output 1,0,0
*/
int *sumOfArr(int *digits, int sizeOfDigits){
    int *retArr = malloc(sizeof(int)*(sizeOfDigits+1));
    if(!retArr)  return NULL;
    memset(retArr, 0, (sizeOfDigits+1));
    int retArrIdx = sizeOfDigits;
    int carry = 0, add = 1;
    for(int i=sizeOfDigits-1; i>=0; i--){
        if(add && (i == sizeOfDigits-1)){
            if(digits[i] == 9){
                retArr[retArrIdx--] = 0;
                carry = 1;
            }
            else{
                retArr[retArrIdx--] = 1+digits[i];
            }
            add = 0;
        }
        else if((digits[i] == 9)&&(carry)){
            retArr[retArrIdx--] = 0;
            carry = 1;
        }
        else{
            retArr[retArrIdx--] = digits[i]+carry;
            if(carry)   carry = 0;
        }
    }

    if(carry){
        retArr[retArrIdx--] = carry;
    }

    return retArr;

}


size_t customStrlen(const char *s){
    size_t count = 0;
    while(*s != '\0'){
        count++;
        s++;
    }
    return count;
}

char *processString(const char *s){
    size_t sLen = strlen(s);

    char retStr[sLen+1];
    int idx = 0;

    for(int i = 0; i<sLen; i++){
        retStr[idx++] = *s++;
        if(*s == '#')   idx--;
    }

    retStr[idx] = '\0';
    return retStr;
}
/*

retStr[0] = a
retSTr[1] = c
retStr[2] = \0

*/
int main() {
    // you can write to stdout for debugging purposes, e.g.
    printf("This is a debug message\n");

    char *str = 'ab#c';
    printf()

    return 0;
}


/*
s = ab#c
idx = 0
arr[]
i=0 => len(s)
arr[idx++] = s[i]
if(s[i] == '#') idx--

arr[] = 
ab
ac

*/

