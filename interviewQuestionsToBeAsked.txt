Following are the questions you can ask during a coding interview,
to ensure you understand the problem:
They may not be applicable to each question or may not be perfect, 
but you'll get an idea when you read through them.


    1. How are the inputs arraged ? Are they in the stack memory or dynamic memory ?
        - This hints at wether you should be using malloc / structures etc
    2. What would be the type of inputs ? integers / floats / strings / array of array ?
    3. Can I expect the inputs to be sorted ?
        - If its not sorted, can I sort it using any sorting technique?
    4. Can I expect there might be duplicate elements in the input ?
    5. If input is integers, can I expect the input numbers to be just positive or just negative or mix of both ?
    6. Can I expect input to be empty at any point?
    7. What would be the maximum size of input ?
        - This will give you an idea if your algorithm can generate output in memory.
        - e.g. if input is 1 million values long, its likely your algorithm can't fit calculations in memory.
        - not unless its done in constant time and constant space.
    8. If input is integers, What would be the range of input values ?
    9. What would be the return type of the output ? Boolean / some integers / a list / a custom structure ?
    10.Standard inputs to be tested your code against:
        - list = []               #empty list
        - list = [0,0,0]          # all zeros
        - list = [1,2,3]          # incremental elements
        - list = [3,2,1]          # decremental elements
        - list = [1,1,1]          # duplicates
        - list = [1,4,2]          # low -> high -> low
        - list = [4,1,5]          # high -> low -> high
        - list = []

